"""
Django settings for Mate365BillingPortal project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from pathlib import Path

from . import envtools

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# Application definition

BRANDING = {
    "NAME": "mateBilling",
    "LOGO_PATH": "img/logos/mate_billing_logo.png"
}

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'organizations',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'portal.apps.PortalConfig',
    'custom',
    'policy',
    'django.contrib.humanize'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'custom.middleware.policy_check_middleware',
]

ROOT_URLCONF = 'Mate365BillingPortal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            str(BASE_DIR.joinpath('templates'))
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'custom.context_processors.branding'
            ],
        },
    },
]

WSGI_APPLICATION = 'Mate365BillingPortal.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Authentication URLs

LOGIN_URL = "/auth/login"
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/auth/login"


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ko-KR'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True

AUTH_USER_MODEL = 'custom.User'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv("EMAIL_HOST")
EMAIL_PORT = envtools.getInt("EMAIL_PORT", 587)
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
EMAIL_USE_TLS = envtools.getBool("EMAIL_USE_TLS", True)
EMAIL_USE_SSL = envtools.getBool("EMAIL_USE_SSL", False)
EMAIL_TIMEOUT = envtools.getInt("EMAIL_TIMEOUT", None)
EMAIL_SSL_KEYFILE = os.getenv("EMAIL_SSL_KEYFILE", None)
EMAIL_SSL_CERTFILE = os.getenv("EMAIL_SSL_CERTFILE", None)
DEFAULT_FROM_EMAIL = os.getenv("EMAIL_FROM")

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_DIRS = [
    str(BASE_DIR.joinpath('static')),
]

PG_BACKEND = {
    "SOAP_URL": os.getenv("PG_SOAP_URL"),
    "STORE_ID": os.getenv("PG_STORE_ID")
}

POWERBI = {
    "AUTHMODE": os.getenv("POWERBI_AUTHMODE","ServicePrincipal"), # MasterUser or ServicePrincipal
    "WORKSPACE_ID": os.getenv("POWERBI_WORKSPACE_ID",""), # Workspace Id in which the report is present
    "REPORT_ID": os.getenv("POWERBI_REPORT_ID",""), # Report Id for which Embed token needs to be generated
    "TENANT_ID": os.getenv("POWERBI_TENANT_ID",""), # Id of the Azure tenant in which AAD app and Power BI report is hosted. Required only for ServicePrincipal authentication mode.
    "CLIENT_ID": os.getenv("POWERBI_CLIENT_ID",""), # Client Id (Application Id) of the AAD app
    "CLIENT_SECRET": os.getenv("POWERBI_CLIENT_SECRET",""), # Client Secret (App Secret) of the AAD app. Required only for ServicePrincipal authentication mode.
    "SCOPE": ['https://analysis.windows.net/powerbi/api/.default'],
    "AUTHORITY": 'https://login.microsoftonline.com/organizations',
    "MASTER_USER": os.getenv("POWERBI_MASTER_USER",""), # AUTHMODE가 MasterUser 경우만 사용
    "MASTER_PASS": os.getenv("POWERBI_MASTER_PASS",""), # AUTHMODE가 MasterUser 경우만 사용
}

POLICY_TERMS_OF_USE = {
    'latest': '20210204',
    'able': [
        '20210204',
    ]
}

POLICY_INFO_PROTECTION = {
    'latest': '20210204',
    'able': [
        '20210204',
    ]
}

POLICY_USING_CREDIT_CARD = {
    'latest': '20210204',
    'able': [
        '20210204',
    ]
}
