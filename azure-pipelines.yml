# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main
- develop

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '5dbad1df-cde9-49af-bced-1351d0c9539a'
  containerRegistry: 'matebilling.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    imageRepository: 'prod'
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    imageRepository: 'dev'

  

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    # - task: Docker@2
    #   displayName: Build container image
    #   inputs:
    #     command: build
    #     repository: $(imageRepository)
    #     dockerfile: $(dockerfilePath)
    #     containerRegistry: $(dockerRegistryServiceConnection)
    #     tags: $(tag)
    - script: |
        docker build -t $(containerRegistry)/$(imageRepository):$(tag) .
        docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock dslim/docker-slim build $(containerRegistry)/$(imageRepository):$(tag)
        docker tag $(containerRegistry)/$(imageRepository).slim:$(tag) $(containerRegistry)/$(imageRepository):$(tag)
      displayName: Build and Minify container image
    - task: Docker@2
      displayName: Push container image to registry
      inputs:
        command: push
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: $(tag)
          

#docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock dslim/docker-slim build