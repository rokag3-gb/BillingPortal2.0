# Python to Linux Web App on Azure

# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main
- develop

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-20.04'
  # Python version: 3.8
  platformName: python
  platformVersion: '3.8'
  runtimePlatform: 'PYTHON|3.8'
  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)
  # Environment name
  ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    environmentName: 'BillingPortal-Production'
    azWebAppName: 'mate365billing'
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    environmentName: 'BillingPortal-Staging'
    azWebAppName: 'mate365billingpreview'

stages:
- stage: BuildAndDeploy
  displayName: Build and Deploy stage
  jobs:
  - job: BuildAndDeployJob
    pool:
      vmImage: $(vmImageName)
    container: mcr.microsoft.com/oryx/build:latest
    steps:
    - script: oryx build --platform $(platformName) --platform-version $(platformVersion) # contents of the script to run
      displayName: Build App using Oryx
      env:
        DISABLE_COLLECTSTATIC: false
    - task: AzureRmWebAppDeployment@4
      displayName: 'Deploy to Web App $(environmentName)'
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure_Deploy_to_MPN-Production-스폰서쉽-Gold'
        appType: 'webAppLinux'
        WebAppName: $(azWebAppName)
        package: '$(projectRoot)'
        RuntimeStack: $(runtimePlatform)
        deploymentMethod: 'runFromPackage'


    # - task: ArchiveFiles@2
    #   displayName: 'Archive files'
    #   inputs:
    #     rootFolderOrFile: '$(projectRoot)'
    #     includeRootFolder: false
    #     archiveType: zip
    #     archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    #     replaceExistingArchive: true

    # - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    #   displayName: 'Upload package'
    #   artifact: drop

# - stage: Deploy
#   displayName: 'Deploy Web App'
#   dependsOn: Package
#   condition: succeeded()
#   jobs:
#   - deployment: DeploymentJob
#     pool:
#       vmImage: $(vmImageName)
#     environment: $(environmentName)
#     strategy:
#       runOnce:
#         deploy:
#           steps:

          
              