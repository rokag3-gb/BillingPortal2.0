# Python to Linux Web App on Azure

# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main
- develop

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-20.04'
  # Python version: 3.9
  platformName: python
  platformVersion: '3.9'
  runtimePlatform: 'PYTHON|3.9'
  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)
  azSubscription: 'Azure_Deploy_to_MPN-Production-스폰서쉽-Gold'
  # Environment name
  ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    environmentName: 'BillingPortal-Production'
    azWebAppName: 'mate365billing'
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    environmentName: 'BillingPortal-Staging'
    azWebAppName: 'mate365billingpreview'

resources:
  containers:
  - container: oryx
    image: mcr.microsoft.com/oryx/build:latest

stages:
- stage: BuildAndDeploy
  displayName: Build and Deploy stage
  jobs:
  - job: BuildAndDeployJob
    pool:
      vmImage: $(vmImageName)
    # container: mcr.microsoft.com/oryx/build:latest
    steps:

    - script: |
        oryx build
      env:
        POST_BUILD_COMMAND: python manage.py collectstatic
        PLATFORM_NAME: $(platformName)
        PLATFORM_VERSION: $(platformVersion)
        ORYX_APP_TYPE: webapps
      displayName: Build App using Oryx
      target: oryx
    - task: AzureAppServiceSettings@1
      displayName: Update Settings for $(environmentName) App Service
      inputs:
        azureSubscription: $(azSubscription)
        appName: $(azWebAppName)
        appSettings: |
          [
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1",
              "slotSetting": false
            }
          ]
    - task: AzureRmWebAppDeployment@4
      displayName: 'Deploy to Web App $(environmentName)'
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: $(azSubscription)
        appType: 'webAppLinux'
        WebAppName: $(azWebAppName)
        package: '$(projectRoot)'
        RuntimeStack: $(runtimePlatform)
        deploymentMethod: 'runFromPackage'

    # - task: ArchiveFiles@2
    #   displayName: 'Archive files'
    #   inputs:
    #     rootFolderOrFile: '$(projectRoot)'
    #     includeRootFolder: false
    #     archiveType: zip
    #     archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    #     replaceExistingArchive: true

    # - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    #   displayName: 'Upload package'
    #   artifact: drop

# - stage: Deploy
#   displayName: 'Deploy Web App'
#   dependsOn: Package
#   condition: succeeded()
#   jobs:
#   - deployment: DeploymentJob
#     pool:
#       vmImage: $(vmImageName)
#     environment: $(environmentName)
#     strategy:
#       runOnce:
#         deploy:
#           steps:

          
              